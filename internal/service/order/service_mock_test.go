// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package order is a generated GoMock package.
package order

import (
	context "context"
	reflect "reflect"

	order "github.com/erizkiatama/gotu-assignment/internal/model/order"
	gomock "go.uber.org/mock/gomock"
)

// MockorderReposistory is a mock of orderReposistory interface.
type MockorderReposistory struct {
	ctrl     *gomock.Controller
	recorder *MockorderReposistoryMockRecorder
}

// MockorderReposistoryMockRecorder is the mock recorder for MockorderReposistory.
type MockorderReposistoryMockRecorder struct {
	mock *MockorderReposistory
}

// NewMockorderReposistory creates a new mock instance.
func NewMockorderReposistory(ctrl *gomock.Controller) *MockorderReposistory {
	mock := &MockorderReposistory{ctrl: ctrl}
	mock.recorder = &MockorderReposistoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockorderReposistory) EXPECT() *MockorderReposistoryMockRecorder {
	return m.recorder
}

// BulkCreateOrderDetail mocks base method.
func (m *MockorderReposistory) BulkCreateOrderDetail(ctx context.Context, req []order.OrderDetailModel) ([]order.OrderDetailModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BulkCreateOrderDetail", ctx, req)
	ret0, _ := ret[0].([]order.OrderDetailModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BulkCreateOrderDetail indicates an expected call of BulkCreateOrderDetail.
func (mr *MockorderReposistoryMockRecorder) BulkCreateOrderDetail(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BulkCreateOrderDetail", reflect.TypeOf((*MockorderReposistory)(nil).BulkCreateOrderDetail), ctx, req)
}

// CreateOrder mocks base method.
func (m *MockorderReposistory) CreateOrder(ctx context.Context, req order.OrderModel) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrder", ctx, req)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateOrder indicates an expected call of CreateOrder.
func (mr *MockorderReposistoryMockRecorder) CreateOrder(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrder", reflect.TypeOf((*MockorderReposistory)(nil).CreateOrder), ctx, req)
}

// GetAllOrder mocks base method.
func (m *MockorderReposistory) GetAllOrder(ctx context.Context, userID int64) ([]order.OrderModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllOrder", ctx, userID)
	ret0, _ := ret[0].([]order.OrderModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllOrder indicates an expected call of GetAllOrder.
func (mr *MockorderReposistoryMockRecorder) GetAllOrder(ctx, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllOrder", reflect.TypeOf((*MockorderReposistory)(nil).GetAllOrder), ctx, userID)
}

// GetOrderDetail mocks base method.
func (m *MockorderReposistory) GetOrderDetail(ctx context.Context, orderID int64) ([]order.OrderDetailModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrderDetail", ctx, orderID)
	ret0, _ := ret[0].([]order.OrderDetailModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrderDetail indicates an expected call of GetOrderDetail.
func (mr *MockorderReposistoryMockRecorder) GetOrderDetail(ctx, orderID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrderDetail", reflect.TypeOf((*MockorderReposistory)(nil).GetOrderDetail), ctx, orderID)
}
