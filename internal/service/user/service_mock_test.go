// Code generated by MockGen. DO NOT EDIT.
// Source: service.go
//
// Generated by this command:
//
//	mockgen -source=service.go -package=user -destination=service_mock_test.go
//

// Package user is a generated GoMock package.
package user

import (
	context "context"
	reflect "reflect"

	user "github.com/erizkiatama/gotu-assignment/internal/model/user"
	gomock "go.uber.org/mock/gomock"
)

// MockuserReposistory is a mock of userReposistory interface.
type MockuserReposistory struct {
	ctrl     *gomock.Controller
	recorder *MockuserReposistoryMockRecorder
}

// MockuserReposistoryMockRecorder is the mock recorder for MockuserReposistory.
type MockuserReposistoryMockRecorder struct {
	mock *MockuserReposistory
}

// NewMockuserReposistory creates a new mock instance.
func NewMockuserReposistory(ctrl *gomock.Controller) *MockuserReposistory {
	mock := &MockuserReposistory{ctrl: ctrl}
	mock.recorder = &MockuserReposistoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockuserReposistory) EXPECT() *MockuserReposistoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockuserReposistory) Create(ctx context.Context, req user.UserModel) (*user.UserModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, req)
	ret0, _ := ret[0].(*user.UserModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockuserReposistoryMockRecorder) Create(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockuserReposistory)(nil).Create), ctx, req)
}

// GetByEmail mocks base method.
func (m *MockuserReposistory) GetByEmail(ctx context.Context, email string) (*user.UserModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByEmail", ctx, email)
	ret0, _ := ret[0].(*user.UserModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByEmail indicates an expected call of GetByEmail.
func (mr *MockuserReposistoryMockRecorder) GetByEmail(ctx, email any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByEmail", reflect.TypeOf((*MockuserReposistory)(nil).GetByEmail), ctx, email)
}
